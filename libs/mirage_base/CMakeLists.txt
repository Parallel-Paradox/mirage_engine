message(STATUS "Building mirage_base...")

file(GLOB_RECURSE SRC "**.cpp")
file(GLOB_RECURSE EXCLUDED "sync/lock_impl*.cpp")
list(REMOVE_ITEM SRC ${EXCLUDED})

include(CheckIncludeFileCXX)
check_include_file_cxx("windows.h" HAS_WINDOWS_H)
check_include_file_cxx("pthread.h" HAS_PTHREAD_H)
if (HAS_WINDOWS_H)
  set(SRC ${SRC} "sync/lock_impl_msvc.cpp")
elseif (HAS_PTHREAD_H)
  set(SRC ${SRC} "sync/lock_impl_posix.cpp")
else ()
  message(FATAL_ERROR "No lock implementation found")
endif ()

if (MIRAGE_BUILD_SPLIT)
  add_library(mirage_base SHARED ${SRC})
  target_compile_definitions(mirage_base PRIVATE MIRAGE_BUILD_BASE)
else ()
  target_sources(mirage_engine PRIVATE ${SRC})
  target_compile_definitions(mirage_engine PRIVATE MIRAGE_BUILD_BASE)
endif ()
